{"version":3,"sources":["../src/haproxy.js"],"names":[],"mappings":";;;;AAOA,WAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,QAAM,SAAS,2cAA2c,KAA3c,CAAid,GAAjd,CAAf;;AAEA,QAAI,MAAM,EAAV;AACA,SAAK,KAAL,CAAW,GAAX,EAAgB,OAAhB,CAAwB,UAAC,IAAD,EAAO,GAAP,EAAe;AAAE,UAAI,OAAO,GAAP,CAAJ,IAAmB,IAAnB;AAA0B,KAAnE;;AAEA,WAAO,GAAP;AACD;;;;AAdM,eAAS,cAAT,CAAwB,IAAxB,EAA8B;AACnC,YAAI,YAAY,KAAK,KAAL,CAAW,IAAX,CAAhB;AACA,YAAI,QAAQ,UAAU,KAAV,CAAgB,CAAhB,EAAmB,UAAU,MAAV,GAAiB,CAApC,CAAZ;;AAEA,eAAO,MAAM,GAAN,CAAU,aAAV,CAAP;AACD","file":"haproxy.js","sourcesContent":["export function parseStatsData(data) {\n  let splitData = data.split('\\n');\n  let lines = splitData.slice(1, splitData.length-2);\n\n  return lines.map(parseStatLine);\n}\n\nfunction parseStatLine(line) {\n  const fields = 'pxname,svname,qcur,qmax,scur,smax,slim,stot,bin,bout,dreq,dresp,ereq,econ,eresp,wretr,wredis,status,weight,act,bck,chkfail,chkdown,lastchg,downtime,qlimit,pid,iid,sid,throttle,lbtot,tracked,type,rate,rate_lim,rate_max,check_status,check_code,check_duration,hrsp_1xx,hrsp_2xx,hrsp_3xx,hrsp_4xx,hrsp_5xx,hrsp_other,hanafail,req_rate,req_rate_max,req_tot,cli_abrt,srv_abrt,comp_in,comp_out,comp_byp,comp_rsp,lastsess,last_chk,last_agt,qtime,ctime,rtime,ttime,'.split(',');\n\n  let obj = {};\n  line.split(',').forEach((data, idx) => { obj[fields[idx]] = data; });\n\n  return obj;\n}\n"]}